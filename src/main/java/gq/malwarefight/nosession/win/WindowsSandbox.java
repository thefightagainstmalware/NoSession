package gq.malwarefight.nosession.win;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.file.Files;

public class WindowsSandbox {
    /**
     * Run a process sandboxed
     * @return success or failure
     */
    public static native boolean runProcess(String[] rwMounts, String[] roMounts, String[] args);

    /**
     * Determines if we are running in a sandbox
     * @return whether we are running in a sandbox
     */
    public static native boolean isSandboxed();

    /**
     * This method was pulled from the Utils class so people can use this module as a standalone library
     */
    private static void copy(InputStream i, OutputStream o) throws IOException {
        byte[] buffer = new byte[16384];
        int read;
        while ((read = i.read(buffer)) > 0) {
            o.write(buffer, 0, read);
        }
        i.close();
        o.close();
    }

    static {
        try {
            File tempFile = Files.createTempFile("minecraft_sandbox", ".dll").toFile();
            try (InputStream is = WindowsSandbox.class.getResourceAsStream("/native/" + System.getProperty("os.arch") + "/windows/" + System.mapLibraryName("windows_sandbox"))) {
                assert is != null: "Native library not compiled";
                copy(is, Files.newOutputStream(tempFile.toPath()));
            }
            System.load(tempFile.getAbsolutePath());
            tempFile.deleteOnExit();
        } catch (Exception e) {
            throw new RuntimeException("Cannot instantiate WindowsSandbox");
        }
    }
}
